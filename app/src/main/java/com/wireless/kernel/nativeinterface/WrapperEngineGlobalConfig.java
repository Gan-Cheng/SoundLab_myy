// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from common_record.djinni

package com.wireless.kernel.nativeinterface;

public final class WrapperEngineGlobalConfig {


    /*package*/ String basePathPrefix;

    /*package*/ int platformType;

    /*package*/ int appType;

    /*package*/ String appVersion = "";

    /*package*/ String osVersion = "";

    public WrapperEngineGlobalConfig(){}

    public WrapperEngineGlobalConfig(
            String basePathPrefix,
            int platformType,
            int appType,
            String appVersion,
            String osVersion) {
        this.basePathPrefix = basePathPrefix;
        this.platformType = platformType;
        this.appType = appType;
        this.appVersion = appVersion;
        this.osVersion = osVersion;
    }

    /**
     *  ===== 重要 存储路径前缀，ios需要填，其他终端不需要填, 一旦确定，后面前缀路径不能再修改 =====
     *  因为ios 每次覆盖安装后，路径前面的uuid会变化，会导致路径发生变化，所以db内存储的路径只能是相对路径
     *  如文件传输，需要存储相对路径，不能存绝对路径；底层 从db读取的路径需要根据base_path_prefix拼装路径，或者删除前缀后再入db
     */
    public String getBasePathPrefix() {
        return basePathPrefix;
    }

    /**    参考 EngineConstant kPlatformTypeAndroid 等常量定义, 底层会做校验，需要正确填写 */
    public int getPlatformType() {
        return platformType;
    }

    /**    参考 EngineConstant kAppTypePCGuild 等常量定义，底层会做校验，需要正确填写 */
    public int getAppType() {
        return appType;
    }

    /** 客户端版本  需要正确填写，底层会校验，长度不能为0 */
    public String getAppVersion() {
        return appVersion;
    }

    /** 操作系统版本 名字-版本 */
    public String getOsVersion() {
        return osVersion;
    }

    @Override
    public String toString() {
        return "WrapperEngineGlobalConfig{"
                + "basePathPrefix=" + basePathPrefix + ","
                + "platformType=" + platformType + ","
                + "appType=" + appType + ","
                + "appVersion=" + appVersion + ","
                + "osVersion=" + osVersion + ","
                + "}";
    }

}
